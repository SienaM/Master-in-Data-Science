<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='aeropuertos (TFM)' inline='true' name='postgres.0a3wzqb0agks5r1ftvkd614yklrs' version='9.3'>
      <connection authentication='username-password' class='postgres' dbname='TFM' odbc-native-protocol='yes' port='5432' server='localhost' username='postgres'>
        <relation name='aeropuertos' table='[public].[aeropuertos]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>segmento</remote-name>
            <remote-type>130</remote-type>
            <local-name>[segmento]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>segmento</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path</remote-name>
            <remote-type>130</remote-type>
            <local-name>[path]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>path</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>board_point</remote-name>
            <remote-type>130</remote-type>
            <local-name>[board_point]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>board_point</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>board_country_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[board_country_code]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>board_country_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>board_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[board_lat]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>board_lat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>board_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[board_lon]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>board_lon</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_point</remote-name>
            <remote-type>130</remote-type>
            <local-name>[off_point]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>off_point</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_country_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[off_country_code]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>off_country_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_lat]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>off_lat</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_lon]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>off_lon</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance_seg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance_seg]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>distance_seg</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_trayectos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_trayectos]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>num_trayectos</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path_order</remote-name>
            <remote-type>3</remote-type>
            <local-name>[path_order]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>path_order</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_trayectos_segmento</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_trayectos_segmento]</local-name>
            <parent-name>[aeropuertos]</parent-name>
            <remote-alias>num_trayectos_segmento</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Board Country Code' datatype='string' name='[board_country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Board Lat' datatype='real' name='[board_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Board Lon' datatype='real' name='[board_lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Board Point' datatype='string' name='[board_point]' role='dimension' type='nominal' />
      <column caption='Distance Seg' datatype='real' name='[distance_seg]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Num Trayectos' datatype='integer' name='[num_trayectos]' role='measure' type='quantitative' />
      <column caption='Num Trayectos Segmento' datatype='integer' name='[num_trayectos_segmento]' role='measure' type='quantitative' />
      <column caption='Off Country Code' datatype='string' name='[off_country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Off Lat' datatype='real' name='[off_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Off Lon' datatype='real' name='[off_lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Off Point' datatype='string' name='[off_point]' role='dimension' type='nominal' />
      <column caption='Path' datatype='string' name='[path]' role='dimension' type='nominal' />
      <column caption='Path Order' datatype='integer' name='[path_order]' role='measure' type='quantitative' />
      <column caption='Segmento' datatype='string' name='[segmento]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.427007' measure-ordering='alphabetic' measure-percentage='0.572993' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='postgres.0a3wzqb0agks5r1ftvkd614yklrs'>
      <datasources>
        <datasource caption='aeropuertos (TFM)' name='postgres.0a3wzqb0agks5r1ftvkd614yklrs' />
      </datasources>
      <datasource-dependencies datasource='postgres.0a3wzqb0agks5r1ftvkd614yklrs'>
        <column caption='Board Point' datatype='string' name='[board_point]' role='dimension' type='nominal' />
        <column-instance column='[board_point]' derivation='None' name='[none:board_point:nk]' pivot='key' type='nominal' />
        <column-instance column='[off_point]' derivation='None' name='[none:off_point:nk]' pivot='key' type='nominal' />
        <column caption='Off Point' datatype='string' name='[off_point]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:board_point:nk]'>
        <groupfilter function='member' level='[none:board_point:nk]' member='&quot;BRU&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:off_point:nk]'>
        <groupfilter function='level-members' level='[none:off_point:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Aeropuertos'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Orígenes y destinos de los vuelos</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='aeropuertos (TFM)' name='postgres.0a3wzqb0agks5r1ftvkd614yklrs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='postgres.0a3wzqb0agks5r1ftvkd614yklrs'>
            <column caption='Board Point' datatype='string' name='[board_point]' role='dimension' type='nominal' />
            <column caption='Distance Seg' datatype='real' name='[distance_seg]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[board_point]' derivation='None' name='[none:board_point:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[off_point]' derivation='None' name='[none:off_point:nk]' pivot='key' type='nominal' />
            <column-instance column='[path]' derivation='None' name='[none:path:nk]' pivot='key' type='nominal' />
            <column-instance column='[path_order]' derivation='None' name='[none:path_order:qk]' pivot='key' type='quantitative' />
            <column caption='Num Trayectos Segmento' datatype='integer' name='[num_trayectos_segmento]' role='measure' type='quantitative' />
            <column caption='Off Point' datatype='string' name='[off_point]' role='dimension' type='nominal' />
            <column caption='Path' datatype='string' name='[path]' role='dimension' type='nominal' />
            <column caption='Path Order' datatype='integer' name='[path_order]' role='measure' type='quantitative' />
            <column-instance column='[distance_seg]' derivation='Sum' name='[sum:distance_seg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[num_trayectos_segmento]' derivation='Sum' name='[sum:num_trayectos_segmento:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]'>
            <groupfilter from='&quot;ALC-BRU&quot;' function='range' level='[none:path:nk]' to='&quot;BRU-YVR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]' included-values='in-range'>
            <min>375.80194613097677</min>
            <max>37197.799799997651</max>
          </filter>
          <slices>
            <column>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:board_point:nk]</column>
            <column>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:off_point:nk]</column>
            <column>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]</column>
            <column>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:longitude:qk]' field-type='quantitative' max='14536428.851273101' min='-13245840.117429743' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:latitude:qk]' field-type='quantitative' max='17146755.252771378' min='-3743773.5737499399' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:latitude:qk]' field-type='quantitative' fold='true' max='17146755.252771378' min='-3743773.5737499399' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:num_trayectos_segmento:qk]' palette='tableau-blue' type='interpolated' />
            <encoding attr='size' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:num_trayectos_segmento:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
            <encoding attr='color' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]' palette='tableau-orange-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path_order:qk]' value='false' />
            <format attr='in-tooltip' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]' value='false' />
            <format attr='in-tooltip' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:latitude:qk]' value='false' />
            <format attr='in-tooltip' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:longitude:qk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:board_point:nk]' value='Aeropuerto de origen&#10;'>
              <formatted-text>
                <run>Aeropuerto de origen&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:off_point:nk]' value='Aeropuerto de destino&#10;'>
              <formatted-text>
                <run>Aeropuerto de destino&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]' value='Ruta&#10;'>
              <formatted-text>
                <run>Ruta&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]' value='Distancia del vuelo'>
              <formatted-text>
                <run>Distancia del vuelo</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:latitude:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]' />
              <path column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path_order:qk]' />
              <lod column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:latitude:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:num_trayectos_segmento:qk]' />
              <size column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:num_trayectos_segmento:qk]' />
              <text column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]' />
              <lod column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]' />
              <lod column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path_order:qk]' />
              <lod column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:off_point:nk]' />
              <lod column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]' />
              <lod column='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:num_trayectos_segmento:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.8427777886390686' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:latitude:qk] + [postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:latitude:qk])</rows>
        <cols>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='aeropuertos (TFM)' name='postgres.0a3wzqb0agks5r1ftvkd614yklrs' />
      </datasources>
      <datasource-dependencies datasource='postgres.0a3wzqb0agks5r1ftvkd614yklrs'>
        <column caption='Board Point' datatype='string' name='[board_point]' role='dimension' type='nominal' />
        <column caption='Distance Seg' datatype='real' name='[distance_seg]' role='measure' type='quantitative' />
        <column-instance column='[board_point]' derivation='None' name='[none:board_point:nk]' pivot='key' type='nominal' />
        <column-instance column='[off_point]' derivation='None' name='[none:off_point:nk]' pivot='key' type='nominal' />
        <column caption='Off Point' datatype='string' name='[off_point]' role='dimension' type='nominal' />
        <column-instance column='[distance_seg]' derivation='Sum' name='[sum:distance_seg:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='85600' x='0' y='0'>
              <zone h='84125' id='1' name='Aeropuertos' show-title='true' w='85600' x='0' y='15875' />
              <zone h='7937' id='8' name='Aeropuertos' pane-specification-id='1' param='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]' type='color' w='85600' x='0' y='7938' />
              <zone h='7938' id='10' name='Aeropuertos' param='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]' type='filter' w='85600' x='0' y='0' />
            </zone>
            <zone fixed-size='144' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='14400' x='85600' y='0'>
              <zone h='50000' id='11' mode='typeinlist' name='Aeropuertos' param='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:board_point:nk]' type='filter' w='14400' x='85600' y='0' />
              <zone h='50000' id='12' name='Aeropuertos' param='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:off_point:nk]' type='filter' w='14400' x='85600' y='50000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='worksheet' name='Aeropuertos'>
      <cards>
        <edge name='left'>
          <strip size='199'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:distance_seg:qk]' type='color' />
            <card pane-specification-id='2' param='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:num_trayectos_segmento:qk]' type='color' />
            <card pane-specification-id='2' param='[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:num_trayectos_segmento:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[attr:path:nk]</field>
            <field>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:board_point:nk]</field>
            <field>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:off_point:nk]</field>
            <field>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:path:nk]</field>
            <field>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:segmento:nk]</field>
            <field>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[none:segmento:qk]</field>
            <field>[postgres.0a3wzqb0agks5r1ftvkd614yklrs].[sum:num_trayectos_segmento:qk]</field>
            <field>[textscan.0puan4e0c8amw8165922r01d03z9].[none:distance_seg:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Aeropuertos'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Aeropuertos' width='192'>
      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
      g7lF8/kc/x9a+oZ/QELtywAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
